{
  "Metadata" : {
    "exportedOn" : "2016-05-17T12:49:25Z",
    "apimanVersion" : "1.2.6.Final"
  },
  "Users" : [ {
    "username" : "admin",
    "fullName" : "Admin",
    "email" : "admin@b-gold-example.org",
    "joinedOn" : "2016-04-26T14:05:41Z",
    "admin" : false
  } ],
  "Gateways" : [ {
    "id" : "TheGateway",
    "name" : "The Gateway",
    "description" : "This is the gateway.",
    "createdBy" : "admin",
    "createdOn" : "2016-04-26T14:05:42Z",
    "modifiedBy" : "admin",
    "modifiedOn" : "2016-04-26T14:05:42Z",
    "type" : "REST",
    "configuration" : "{\"endpoint\":\"https://localhost:8443/apiman-gateway-api\",\"username\":\"apimanager\",\"password\":\"apiman123!\"}"
  }, {
    "id" : "TheNewGateway2",
    "name" : "The New Gateway2",
    "description" : "This is the new gateway2.",
    "createdBy" : "admin",
    "createdOn" : "2016-05-17T12:01:49Z",
    "modifiedBy" : "admin",
    "modifiedOn" : "2016-05-17T12:01:49Z",
    "type" : "REST",
    "configuration" : "{\"endpoint\":\"http://localhost:8080/apiman-gateway-api-new\",\"username\":\"foo\",\"password\":\"$CRYPT::mE3e3io+OWPrWlbVuFyHRg==\"}"
  } ],
  "Plugins" : [ {
    "id" : 999,
    "groupId" : "io.apiman.plugins",
    "artifactId" : "apiman-plugins-transformation-policy",
    "version" : "1.2.6.Final",
    "name" : "Transformation Policy Plugin",
    "description" : "This plugin provides a very simple policy which can transform the request and/or response payload between XML and JSON.",
    "createdBy" : "admin",
    "createdOn" : "2016-05-16T18:11:18Z",
    "deleted" : false
  } ],
  "Roles" : [ {
    "id" : "APIDeveloper",
    "name" : "API Developer",
    "description" : "Users responsible for creating and managing APIs should be granted this role within an Organization.",
    "createdBy" : "admin",
    "createdOn" : "2016-04-26T14:05:42Z",
    "autoGrant" : false,
    "permissions" : [ "apiAdmin", "planEdit", "apiEdit", "planAdmin", "apiView", "planView" ]
  }, {
    "id" : "ClientAppDeveloper",
    "name" : "Client App Developer",
    "description" : "Users responsible for creating and managing client apps should be granted this role within an Organization.",
    "createdBy" : "admin",
    "createdOn" : "2016-04-26T14:05:42Z",
    "autoGrant" : false,
    "permissions" : [ "clientAdmin", "clientEdit", "clientView" ]
  }, {
    "id" : "OrganizationOwner",
    "name" : "Organization Owner",
    "description" : "Automatically granted to the user who creates an Organization.  Grants all privileges.",
    "createdBy" : "admin",
    "createdOn" : "2016-04-26T14:05:41Z",
    "autoGrant" : true,
    "permissions" : [ "orgView", "apiAdmin", "clientAdmin", "planEdit", "orgEdit", "clientEdit", "apiEdit", "clientView", "planAdmin", "orgAdmin", "apiView", "planView" ]
  } ],
  "PolicyDefinitions" : [ {
    "id" : "AuthorizationPolicy",
    "policyImpl" : "class:io.apiman.gateway.engine.policies.AuthorizationPolicy",
    "name" : "Authorization Policy",
    "description" : "Enables fine grained authorization to API resources based on authenticated user roles.",
    "icon" : "users",
    "templates" : [ {
      "template" : "Appropriate authorization roles are required.  There are ${rules.size()} authorization rules defined."
    } ],
    "formType" : "Default",
    "deleted" : false
  }, {
    "id" : "BASICAuthenticationPolicy",
    "policyImpl" : "class:io.apiman.gateway.engine.policies.BasicAuthenticationPolicy",
    "name" : "BASIC Authentication Policy",
    "description" : "Enables HTTP BASIC Authentication on an API.  Some configuration required.",
    "icon" : "lock",
    "templates" : [ {
      "template" : "Access to the API is protected by BASIC Authentication through the '${realm}' authentication realm.  @if{forwardIdentityHttpHeader != null}Successfully authenticated requests will forward the authenticated identity to the back end API via the '${forwardIdentityHttpHeader}' custom HTTP header.@end{}"
    } ],
    "formType" : "Default",
    "deleted" : false
  }, {
    "id" : "CachingPolicy",
    "policyImpl" : "class:io.apiman.gateway.engine.policies.CachingPolicy",
    "name" : "Caching Policy",
    "description" : "Allows caching of API responses in the Gateway to reduce overall traffic to the back-end API.",
    "icon" : "hdd-o",
    "templates" : [ {
      "template" : "API responses will be cached for ${ttl} seconds."
    } ],
    "formType" : "Default",
    "deleted" : false
  }, {
    "id" : "IPBlacklistPolicy",
    "policyImpl" : "class:io.apiman.gateway.engine.policies.IPBlacklistPolicy",
    "name" : "IP Blacklist Policy",
    "description" : "Requests that originate from a specified set of valid IP addresses will be denied access.",
    "icon" : "thumbs-down",
    "templates" : [ {
      "template" : "Requests that originate from the set of ${ipList.size()} configured IP address(es) will be denied access to the managed API."
    } ],
    "formType" : "Default",
    "deleted" : false
  }, {
    "id" : "IPWhitelistPolicy",
    "policyImpl" : "class:io.apiman.gateway.engine.policies.IPWhitelistPolicy",
    "name" : "IP Whitelist Policy",
    "description" : "Only requests that originate from a specified set of valid IP addresses will be allowed through.",
    "icon" : "filter",
    "templates" : [ {
      "template" : "Only requests that originate from the set of ${ipList.size()} configured IP address(es) will be allowed to invoke the managed API."
    } ],
    "formType" : "Default",
    "deleted" : false
  }, {
    "id" : "IgnoredResourcesPolicy",
    "policyImpl" : "class:io.apiman.gateway.engine.policies.IgnoredResourcesPolicy",
    "name" : "Ignored Resources Policy",
    "description" : "Requests satisfying the provided regular expression will be ignored.",
    "icon" : "eye-slash",
    "templates" : [ {
      "template" : "Requests matching any of the ${rules.size()} regular expressions provided will receive a 404 error code."
    } ],
    "formType" : "Default",
    "deleted" : false
  }, {
    "id" : "QuotaPolicy",
    "policyImpl" : "class:io.apiman.gateway.engine.policies.QuotaPolicy",
    "name" : "Quota Policy",
    "description" : "Provides a way to limit the total number of requests that can be sent to an API.",
    "icon" : "exchange",
    "templates" : [ {
      "template" : "Consumers cannot exceed their quota of ${limit} requests per ${granularity} per ${period}."
    } ],
    "formType" : "Default",
    "deleted" : false
  }, {
    "id" : "RateLimitingPolicy",
    "policyImpl" : "class:io.apiman.gateway.engine.policies.RateLimitingPolicy",
    "name" : "Rate Limiting Policy",
    "description" : "Enforces rate configurable request rate limits on an API.  This ensures that consumers can't overload an API with too many requests.",
    "icon" : "sliders",
    "templates" : [ {
      "template" : "Consumers are limited to ${limit} requests per ${granularity} per ${period}."
    } ],
    "formType" : "Default",
    "deleted" : false
  }, {
    "id" : "TimeRestrictedAccessPolicy",
    "policyImpl" : "class:io.apiman.gateway.engine.policies.TimeRestrictedAccessPolicy",
    "name" : "Time Restricted Access Policy",
    "description" : "Requests matching the specified regular expression and made within the specified time period will be ignored.",
    "icon" : "clock-o",
    "templates" : [ {
      "template" : "Requests matching the regular expression and made outside the specified time period will receive a 423 error code."
    } ],
    "formType" : "Default",
    "deleted" : false
  }, {
    "id" : "TransferQuotaPolicy",
    "policyImpl" : "class:io.apiman.gateway.engine.policies.TransferQuotaPolicy",
    "name" : "Transfer Quota Policy",
    "description" : "Provides a way to limit the total number of bytes that can be transferred from (or to) an API.",
    "icon" : "download",
    "templates" : [ {
      "template" : "Consumers are limited to transferring ${limit} bytes per ${granularity} per ${period}."
    } ],
    "formType" : "Default",
    "deleted" : false
  }, {
    "id" : "URLRewritingPolicy",
    "policyImpl" : "class:io.apiman.gateway.engine.policies.URLRewritingPolicy",
    "name" : "URL Rewriting Policy",
    "description" : "Responses from the back-end API will be modified by fixing up any incorrect URLs found with modified ones.  This is useful because apiman works through an API Gateway.",
    "icon" : "pencil-square",
    "templates" : [ {
      "template" : "Responses will be modified by finding all text matching regular expression '${fromRegex}' with '${toReplacement}'."
    } ],
    "formType" : "Default",
    "deleted" : false
  } ],
  "Orgs" : [ {
    "OrganizationBean" : {
      "id" : "bucharest-gold",
      "name" : "bucharest-gold",
      "description" : "Node.js at JBoss",
      "createdBy" : "admin",
      "createdOn" : "2016-05-17T12:24:20Z",
      "modifiedBy" : "admin",
      "modifiedOn" : "2016-05-17T12:24:20Z"
    },
    "Memberships" : [ {
      "id" : 2,
      "userId" : "admin",
      "roleId" : "OrganizationOwner",
      "organizationId" : "bucharest-gold",
      "createdOn" : "2016-05-17T12:24:20Z"
    } ],
    "Plans" : [ {
      "PlanBean" : {
        "id" : "WeHaveAPlan",
        "name" : "WeHaveAPlan",
        "createdBy" : "admin",
        "createdOn" : "2016-05-17T12:24:59Z"
      },
      "Versions" : [ {
        "PlanVersionBean" : {
          "id" : 3,
          "status" : "Created",
          "version" : "1.0",
          "createdBy" : "admin",
          "createdOn" : "2016-05-17T12:24:59Z",
          "modifiedBy" : "admin",
          "modifiedOn" : "2016-05-17T12:24:59Z"
        },
        "Policies" : [ ]
      } ]
    } ],
    "Apis" : [ {
      "ApiBean" : {
        "id" : "testAPI",
        "name" : "testAPI",
        "createdBy" : "admin",
        "createdOn" : "2016-05-17T12:26:03Z"
      },
      "Versions" : [ {
        "ApiVersionBean" : {
          "id" : 4,
          "status" : "Created",
          "endpointProperties" : { },
          "gateways" : [ ],
          "publicAPI" : false,
          "plans" : [ ],
          "version" : "1.0",
          "createdBy" : "admin",
          "createdOn" : "2016-05-17T12:26:03Z",
          "modifiedBy" : "admin",
          "modifiedOn" : "2016-05-17T12:26:03Z"
        },
        "Policies" : [ ]
      } ]
    } ],
    "Clients" : [ {
      "ClientBean" : {
        "id" : "bucharest-gold-client-app",
        "name" : "bucharest-gold-client-app",
        "createdBy" : "admin",
        "createdOn" : "2016-05-17T12:48:59Z"
      },
      "Versions" : [ {
        "ClientVersionBean" : {
          "id" : 11,
          "status" : "Created",
          "version" : "1.0",
          "createdBy" : "admin",
          "createdOn" : "2016-05-17T12:48:59Z",
          "modifiedBy" : "admin",
          "modifiedOn" : "2016-05-17T12:48:59Z",
          "apikey" : "0a6b9731-ba48-406e-931b-501c990ea796"
        },
        "Policies" : [ ],
        "Contracts" : [ ]
      } ]
    } ],
    "Audits" : [ {
      "id" : 5,
      "who" : "admin",
      "organizationId" : "bucharest-gold",
      "entityType" : "Organization",
      "createdOn" : "2016-05-17T12:24:20Z",
      "what" : "Create"
    }, {
      "id" : 6,
      "who" : "admin",
      "organizationId" : "bucharest-gold",
      "entityType" : "Plan",
      "entityId" : "WeHaveAPlan",
      "createdOn" : "2016-05-17T12:24:59Z",
      "what" : "Create"
    }, {
      "id" : 7,
      "who" : "admin",
      "organizationId" : "bucharest-gold",
      "entityType" : "Plan",
      "entityId" : "WeHaveAPlan",
      "entityVersion" : "1.0",
      "createdOn" : "2016-05-17T12:24:59Z",
      "what" : "Create"
    }, {
      "id" : 8,
      "who" : "admin",
      "organizationId" : "bucharest-gold",
      "entityType" : "Api",
      "entityId" : "testAPI",
      "createdOn" : "2016-05-17T12:26:03Z",
      "what" : "Create"
    }, {
      "id" : 9,
      "who" : "admin",
      "organizationId" : "bucharest-gold",
      "entityType" : "Api",
      "entityId" : "testAPI",
      "entityVersion" : "1.0",
      "createdOn" : "2016-05-17T12:26:03Z",
      "what" : "Create"
    }, {
      "id" : 10,
      "who" : "admin",
      "organizationId" : "bucharest-gold",
      "entityType" : "Client",
      "entityId" : "bucharest-gold-client-app",
      "createdOn" : "2016-05-17T12:48:59Z",
      "what" : "Create"
    }, {
      "id" : 12,
      "who" : "admin",
      "organizationId" : "bucharest-gold",
      "entityType" : "Client",
      "entityId" : "bucharest-gold-client-app",
      "entityVersion" : "1.0",
      "createdOn" : "2016-05-17T12:48:59Z",
      "what" : "Create"
    } ]
  } ]
}