{
  "Metadata": {
    "exportedOn": "2016-05-09T23:24:06Z",
    "apimanVersion": "1.2.5.Final"
  },
  "Users": [
    {
      "username": "admin",
      "fullName": "Admin",
      "email": "admin@b-gold-example.org",
      "joinedOn": "2016-04-26T14:05:41Z",
      "admin": false
    }
  ],
  "Gateways": [
    {
      "id": "TheGateway",
      "name": "The Gateway",
      "description": "This is the gateway.",
      "createdBy": "admin",
      "createdOn": "2016-04-26T14:05:42Z",
      "modifiedBy": "admin",
      "modifiedOn": "2016-04-26T14:05:42Z",
      "type": "REST",
      "configuration": "{\"endpoint\":\"https://localhost:8443/apiman-gateway-api\",\"username\":\"apimanager\",\"password\":\"apiman123!\"}"
    }
  ],
  "Plugins": [
    {
      "id": 1,
      "groupId": "io.apiman.plugins",
      "artifactId": "apiman-plugins-transformation-policy",
      "version": "1.2.5.Final",
      "name": "Transformation Policy Plugin",
      "description": "This plugin provides a very simple policy which can transform the request and/or response payload between XML and JSON.",
      "createdBy": "admin",
      "createdOn": "2016-05-16T18:11:18Z",
      "deleted": false
    }
  ],
  "Roles": [
    {
      "id": "APIDeveloper",
      "name": "API Developer",
      "description": "Users responsible for creating and managing APIs should be granted this role within an Organization.",
      "createdBy": "admin",
      "createdOn": "2016-04-26T14:05:42Z",
      "permissions": [
        "planEdit",
        "apiAdmin",
        "apiView",
        "apiEdit",
        "planView",
        "planAdmin"
      ]
    },
    {
      "id": "ClientAppDeveloper",
      "name": "Client App Developer",
      "description": "Users responsible for creating and managing client apps should be granted this role within an Organization.",
      "createdBy": "admin",
      "createdOn": "2016-04-26T14:05:42Z",
      "permissions": [
        "clientAdmin",
        "clientView",
        "clientEdit"
      ]
    },
    {
      "id": "OrganizationOwner",
      "name": "Organization Owner",
      "description": "Automatically granted to the user who creates an Organization.  Grants all privileges.",
      "createdBy": "admin",
      "createdOn": "2016-04-26T14:05:41Z",
      "autoGrant": true,
      "permissions": [
        "clientAdmin",
        "clientView",
        "orgView",
        "orgAdmin",
        "planEdit",
        "clientEdit",
        "apiAdmin",
        "apiView",
        "apiEdit",
        "planView",
        "planAdmin",
        "orgEdit"
      ]
    }
  ],
  "PolicyDefinitions": [
    {
      "id": "AuthorizationPolicy",
      "policyImpl": "class:io.apiman.gateway.engine.policies.AuthorizationPolicy",
      "name": "Authorization Policy",
      "description": "Enables fine grained authorization to API resources based on authenticated user roles.",
      "icon": "users",
      "templates": [
        {
          "template": "Appropriate authorization roles are required.  There are ${rules.size()} authorization rules defined."
        }
      ],
      "formType": "Default",
      "deleted": false
    },
    {
      "id": "BASICAuthenticationPolicy",
      "policyImpl": "class:io.apiman.gateway.engine.policies.BasicAuthenticationPolicy",
      "name": "BASIC Authentication Policy",
      "description": "Enables HTTP BASIC Authentication on an API.  Some configuration required.",
      "icon": "lock",
      "templates": [
        {
          "template": "Access to the API is protected by BASIC Authentication through the '${realm}' authentication realm.  @if{forwardIdentityHttpHeader != null}Successfully authenticated requests will forward the authenticated identity to the back end API via the '${forwardIdentityHttpHeader}' custom HTTP header.@end{}"
        }
      ],
      "formType": "Default",
      "deleted": false
    },
    {
      "id": "CachingPolicy",
      "policyImpl": "class:io.apiman.gateway.engine.policies.CachingPolicy",
      "name": "Caching Policy",
      "description": "Allows caching of API responses in the Gateway to reduce overall traffic to the back-end API.",
      "icon": "hdd-o",
      "templates": [
        {
          "template": "API responses will be cached for ${ttl} seconds."
        }
      ],
      "formType": "Default",
      "deleted": false
    },
    {
      "id": "IPBlacklistPolicy",
      "policyImpl": "class:io.apiman.gateway.engine.policies.IPBlacklistPolicy",
      "name": "IP Blacklist Policy",
      "description": "Requests that originate from a specified set of valid IP addresses will be denied access.",
      "icon": "thumbs-down",
      "templates": [
        {
          "template": "Requests that originate from the set of ${ipList.size()} configured IP address(es) will be denied access to the managed API."
        }
      ],
      "formType": "Default",
      "deleted": false
    },
    {
      "id": "IPWhitelistPolicy",
      "policyImpl": "class:io.apiman.gateway.engine.policies.IPWhitelistPolicy",
      "name": "IP Whitelist Policy",
      "description": "Only requests that originate from a specified set of valid IP addresses will be allowed through.",
      "icon": "filter",
      "templates": [
        {
          "template": "Only requests that originate from the set of ${ipList.size()} configured IP address(es) will be allowed to invoke the managed API."
        }
      ],
      "formType": "Default",
      "deleted": false
    },
    {
      "id": "IgnoredResourcesPolicy",
      "policyImpl": "class:io.apiman.gateway.engine.policies.IgnoredResourcesPolicy",
      "name": "Ignored Resources Policy",
      "description": "Requests satisfying the provided regular expression will be ignored.",
      "icon": "eye-slash",
      "templates": [
        {
          "template": "Requests matching any of the ${rules.size()} regular expressions provided will receive a 404 error code."
        }
      ],
      "formType": "Default",
      "deleted": false
    },
    {
      "id": "QuotaPolicy",
      "policyImpl": "class:io.apiman.gateway.engine.policies.QuotaPolicy",
      "name": "Quota Policy",
      "description": "Provides a way to limit the total number of requests that can be sent to an API.",
      "icon": "exchange",
      "templates": [
        {
          "template": "Consumers cannot exceed their quota of ${limit} requests per ${granularity} per ${period}."
        }
      ],
      "formType": "Default",
      "deleted": false
    },
    {
      "id": "RateLimitingPolicy",
      "policyImpl": "class:io.apiman.gateway.engine.policies.RateLimitingPolicy",
      "name": "Rate Limiting Policy",
      "description": "Enforces rate configurable request rate limits on an API.  This ensures that consumers can't overload an API with too many requests.",
      "icon": "sliders",
      "templates": [
        {
          "template": "Consumers are limited to ${limit} requests per ${granularity} per ${period}."
        }
      ],
      "formType": "Default",
      "deleted": false
    },
    {
      "id": "TimeRestrictedAccessPolicy",
      "policyImpl": "class:io.apiman.gateway.engine.policies.TimeRestrictedAccessPolicy",
      "name": "Time Restricted Access Policy",
      "description": "Requests matching the specified regular expression and made within the specified time period will be ignored.",
      "icon": "clock-o",
      "templates": [
        {
          "template": "Requests matching the regular expression and made outside the specified time period will receive a 423 error code."
        }
      ],
      "formType": "Default",
      "deleted": false
    },
    {
      "id": "TransferQuotaPolicy",
      "policyImpl": "class:io.apiman.gateway.engine.policies.TransferQuotaPolicy",
      "name": "Transfer Quota Policy",
      "description": "Provides a way to limit the total number of bytes that can be transferred from (or to) an API.",
      "icon": "download",
      "templates": [
        {
          "template": "Consumers are limited to transferring ${limit} bytes per ${granularity} per ${period}."
        }
      ],
      "formType": "Default",
      "deleted": false
    },
    {
      "id": "URLRewritingPolicy",
      "policyImpl": "class:io.apiman.gateway.engine.policies.URLRewritingPolicy",
      "name": "URL Rewriting Policy",
      "description": "Responses from the back-end API will be modified by fixing up any incorrect URLs found with modified ones.  This is useful because apiman works through an API Gateway.",
      "icon": "pencil-square",
      "templates": [
        {
          "template": "Responses will be modified by finding all text matching regular expression '${fromRegex}' with '${toReplacement}'."
        }
      ],
      "formType": "Default",
      "deleted": false
    }
  ],
  "Orgs": []
}